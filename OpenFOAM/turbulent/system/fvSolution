/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  6                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
/*
    p
    {
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-06;
        relTol          0;
	    minIter 	3;
    }
*/

    p
    {
        solver           GAMG;
        tolerance        1e-6;
        relTol           0.01;
        smoother         GaussSeidel;
        nPreSweeps       0;
        nPostSweeps      2;
        cacheAgglomeration on;
        agglomerator     faceAreaPair;
        nCellsInCoarsestLevel 100;
        mergeLevels      1;
	    minIter 	3;
    }

    pFinal
    {
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-06;
        relTol          0;
	    minIter		3;
    }

/*
    U
    {
        solver          PBiCG;
        preconditioner  DILU;
        tolerance       1e-08;
        relTol          0;
	    minIter		3;
    }
*/

    U
    {
        type            coupled;
        solver          PBiCCCG;
        preconditioner  DILU;
        tolerance       (1e-08 1e-08 1e-08);
        relTol          (0 0 0);
	    minIter		3;
    }

    UFinal
    {
/*
        solver          PBiCG;
        preconditioner  DILU;
        tolerance       1e-08;
        relTol          0;
	    minIter		3;
*/

        type            coupled;
        solver          PBiCCCG;
        preconditioner  DILU;
        tolerance       (1e-08 1e-08 1e-08);
        relTol          (0 0 0);
	    minIter		3;
    }

    nuTilda
    {
        solver          PBiCG;
        preconditioner  DILU;
        tolerance       1e-08;
        relTol          0;
	    minIter		3;
    }

    nuTildaFinal
    {
        solver          PBiCG;
        preconditioner  DILU;
        tolerance       1e-08;
        relTol          0;
	    minIter		3;
    }

}

PISO
{
    nCorrectors     2;
    nNonOrthogonalCorrectors 1;
    pRefCell        0;
    pRefValue       0;
}

PIMPLE
{
//If you set nOuterCorrectors to 1 is equivalent to piso    
    nOuterCorrectors 1;
    //nOuterCorrectors 2;

	nCorrectors 2;
	nNonOrthogonalCorrectors 1;
    pRefCell        0;
    pRefValue       0;
}

relaxationFactors
{
/*
    fields
    {
        p               0.3;
    }
    equations
    {
        U               0.7;
        k               0.7;
        omega           0.7;
    }
*/
}

// ************************************************************************* //
